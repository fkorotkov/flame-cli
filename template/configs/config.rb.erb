# frozen_string_literal: true

## Module for Application configuration
module <%= @module_name %>
	::<%= @short_module_name %> = ::<%= @module_name %>

	## Helpers
	def self.logger
		<%= @short_module_name %>::Application.config[:logger]
	end

	## Configuration for application
	module Config
		def self.included(app)
			## Required configs
			load_configs(
				app, :server, :session, :site, require: true
			)

			## Threads (for mails)
			Thread.abort_on_exception = true

			%i[Logger]
				.each { |config| app.include Config.const_get(config) }

			## Currencies rates
			# Money.default_bank = Money::Bank::GoogleCurrency.new
			### https://github.com/RubyMoney/money#troubleshooting
			# I18n.enforce_available_locales = false

			## Google Maps API
			# google_maps_api_config = app.config[:google_maps_api]
			# Google::Base.configs = google_maps_api_config

			## Not-required configs
			# load_configs(app, :jivosite)
		end

		def self.load_configs(app, *keys, require: false)
			keys.each do |key|
				app.config.load_yaml key
			rescue Errno::ENOENT => e
				next unless require

				raise e
			end
		end
	end
end
